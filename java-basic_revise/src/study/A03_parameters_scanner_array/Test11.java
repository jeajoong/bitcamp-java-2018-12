//배열 선언하는 방법과 사용하는 방법
package study.A03_parameters_scanner_array;

public class Test11 {
  /*
   * 배열 - 같은 종류의 메모리를 여러 개 만드는 문법
   * 
   * 배열 선언
   * 메모리종류[] 래퍼런스변수명;
   * 래퍼런스변수명 = new 메모리종류[개수];
   * 
   * 데이터타입[] 래퍼런스;
   * 래퍼런스=new 데이터타입[개수]
   * 
   * 예) 
   */
  public static void main(String[] args) {
    //배열 문법을 사용하지 않고 같은 종류의 값을 여러 개 저장하는 방법
    //=>저장할 값 개수 만큼 변수를 선언해야 한다.
    int a1, a2, a3, a4, a5;
    a1 = 100;
    a2 = 90;
    a3 = 80;
    a4 = 70;
    a5 = 60;
    
    //배열 문법을 이용하여 같은 종류의 메모리를 여러 개 만드는 방법
    //1)배열을 가리킬 래퍼런스 선언
    //래퍼런스(reference?) 메모리의 주소를 저장하는 변수
    //int arr2[5]; // c언어 스타일 - 배열을 만들 때 개수를 바로 지정한다.
    int[] arr1; // 자바는 이 형식을 선호한다.
    int arr2[]; // c언어 스타일도 사용가능
    
    //자바에서는 로컬 변수(메서드 안에 선언된 변수)에 값을 저장하지 않고 사용하려 시도하면
    //컴파일 오류가 발생한다.
    //arr1[0] = 100; 초기화 하지않고 사용했기 때문에 컴파일 오류 발생
    
    arr1 = null; //null 0으로 설정한다. 즉 특정 메모리를 가리키지 않은 상태(주소가 없음)를 표시함.
    arr1[0] = 100; //arr1을 사용하기 전에 초기화 시켰기 때문에 컴파일 오류는 발생하지않는다.
                      //그러나 없는 배열을 사용하려고 했기때문에 오류 발생
    
    //배열을 만들지도 않고, 래퍼런스를 사용하려 하면 오류
    
    //2) 배열을 생성하고 그 주소를 래퍼런스안에 넣는다
    //   생성된 배열을 "배열 인스턴스"라 한다.
    arr1 = new int[5];
    arr2 = new int[5];
    
    //3) 배열에 값을 담기 - 배열 래퍼런스를 사용하여 메모리를 지정한다.
    arr1[0] = 100;
    arr1[1] = 90;
    arr1[2] = 80;
    arr1[3] = 70;
    arr1[4] = 60;
    // arr1[-1] = 100; 예외발생 컴파일 오류
    // arr1[5] = 90; 컴파일 오류 
  }
}
