public class PhotoBoardAddCommand extends AbstractCommand {
  
  PhotoBoardDao photoBoardDao; // 서버의 PhotoBoardDaoImpl 객체를 대행하는 프록시 객체이다.
  PhotoFileDao photoFileDao;
  
  public PhotoBoardAddCommand(PhotoBoardDao photoBoardDao, PhotoFileDao photoFileDao) {
    this.photoBoardDao = photoBoardDao;
    this.photoFileDao = photoFileDao;
  }
  
  @Override
  public void execute(Response response) throws Exception {
    PhotoBoard board = new PhotoBoard();
    board.setTitle(response.requestString("사진 제목?"));
    board.setLessonNo(response.requestInt("수업?"));
    photoBoardDao.insert(board);
    
    // 파일 하나이상 입력받게 하려고 만듦
    response.println("최소 한 개의 사진 파일을 등록해야 합니다.");
    response.println("파일명 입력 없이 그냥 엔터를 치면 파일 추가를 마칩니다.");
    
    
    //처음에 files 값은 0 while문 빠져나가서 file 저장후 새로운 값으로 while반복
    List<PhotoFile> files = new ArrayList<>();
    
    while (true) {
      String filePath = response.requestString("사진 파일?"); 
      if (filePath.length() == 0) { //엔터입력시에 작동
        if (files.size() == 0) { // List에 파일 없을시에 작동
          response.println("최소 한개의 사진 파일을 등록해야 합니다.");
          continue;
        } else {
        break;
      }
   }
      //filePath는 클라이언트로 부터 얻어온 문자열
      //클라이언트로 부터 얻어온 문자열이 없을 때,
      //처음 빈값을 입력했을때  files의 실질적인 사이즈는 0
    PhotoFile file = new PhotoFile();
    file.setFilePath(filePath);
    file.setPhotoBoardNo(board.getNo());
    files.add(file);
    //filePath에 값이 있다면 와서 file 객체에 넣어주고 list에 처리 add함 +1
    }
    // 첨부파일을 DB에 저장한다.
    for (PhotoFile file : files) {
      photoFileDao.insert(file);
    }
    response.println("저장하였습니다.");
    
  }
}